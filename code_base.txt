


























































<!DOCTYPE html>
<html>
<head>
	<title>Kebo Delivery</title>
	<link rel="stylesheet" href="web-payments-quickstart-main\public\app.css" preload>
    <script src="https://sandbox.web.squarecdn.com/v1/square.js"></script>
	<link rel="stylesheet" href="style/main_style.css">

	<link rel="stylesheet" href="/reference/sdks/web/static/styles/code-preview.css" preload>
	<script src="https://sandbox.web.squarecdn.com/v1/square.js"></script>
	<link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
	<link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
	<style>
		.material-symbols-outlined {
		  font-variation-settings:
		  'FILL' 0,
		  'wght' 400,
		  'GRAD' 0,
		  'opsz' 48
		}
	</style>
	<style>
		body{
			background-color:  rgba(80, 112, 112, 0.089);
		}
		.container-order{
			position: absolute;
			top:20px;
			left: 20px;
			color: white;
			padding: 20px;
			border-radius: 50px;
			font-family: 'Roboto';
			font-size: 32px;
			background-color: rgb(80, 112, 112);
			cursor: pointer;
		}
		.cart{
			position: absolute;
			bottom: 20px;
			left: 20px;
			color: white;
			padding: 20px;
			border-radius: 50px;
			font-family: 'Roboto';
			font-size: 32px;
			background-color: rgb(80, 112, 112);
			cursor: pointer;
		}
		.container-order:hover, .cart:hover{
			background-color: rgba(80, 112, 112, 0.517);
			color: rgb(255, 255, 255);
		}
	</style>
	<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
</head>

<body>
    <div class="container-order" id="order-button" onclick="open_restuarant()">Order</div>

    <div class="container-1 hide-r" id="order-items-r">
		<!-- open R_nth objects -->
		<!-- <div id="restaurant" onclick="open_menu()">R1</div> -->
    </div>

	<div class="container-2 hide-m" id="Menus">

		 <!-- <div onclick="show_items()">Menu</div>
		 <div class="items-container hide-i" id="M1_items">
			<p>Items:</p><br>
			<ul>
				<li class="" id=""></li>
			</ul>
		 </div> -->

	</div>
	

	<div onclick="show_cart()" class="cart">
		<span  class="material-symbols-outlined">
		shopping_cart
		</span>
	</div>
	<div class="cart_win hide_cart" id="cart_grabber">
		<div id="payment-form">
			<div>
				<label for="quantity">Quantity:</label>
				<input type="number" id="quantity" />
			</div>
			<div>
				<label for="price">Price:<br> <span id="cost-span"></span> </label>
			</div>
			<div id="card-container"></div>
			<button id="card-button">Pay</button>
			<div id="payment-status-container"></div>
		</div>
	</div>

	<script type="module">
		const quantityInput = document.getElementById('quantity');
		const costSpan = document.getElementById('cost-span');

		quantityInput.addEventListener('input', () => {
			const quantity = parseInt(quantityInput.value);
			const price = 10;
			const cost = quantity * price;

			costSpan.textContent = cost.toFixed(2);
		});

		const payments = Square.payments('sandbox-sq0idb-RT3u-HhCpNdbMiGg5aXuVg', 'TC4Z3ZEBKRXRH');
		const card = await payments.card();
		await card.attach('#card-container');
	  
		const cardButton = document.getElementById('card-button');
		cardButton.addEventListener('click', async () => {
			const statusContainer = document.getElementById('payment-status-container');
			const quantity = parseInt(quantityInput.value);
			const price = 10;
			const cost = quantity * price;

			try {
				const result = await card.tokenize();
				if (result.status === 'OK') {
					console.log(`Payment token is ${result.token}`);
					statusContainer.innerHTML = "Payment Successful";
					
					// You can use the quantity and price variables in your further processing
					console.log(`Quantity: ${quantity}, Price: ${price}, Cost: ${cost}`);
				} else {
					let errorMessage = `Tokenization failed with status: ${result.status}`;
					if (result.errors) {
						errorMessage += ` and errors: ${JSON.stringify(result.errors)}`;
					}
					
					throw new Error(errorMessage);
				}
			} catch (e) {
				console.error(e);
				statusContainer.innerHTML = "Payment Failed";
			}
		});
	</script>
	  
	<script src="js/main_function.js"></script>
</body>
</html>

.container-order{
    z-index: -1;
}
.container-1{
    z-index: 1;
    /* display: none; */
    /* position: absolute; */
    /* top:40px; */
    left: 20px;
    margin: 75px;
    color: white;
    padding: 20px;
    border-radius: 10px;
    font-family: 'Roboto';
    font-size: 32px;
    background-color: rgb(102, 142, 142);
    cursor: pointer;
}
.container-1 ul{
    list-style: none;
}
.container-1 ul li{
    margin: 20px;
    padding: 5px;
}
.container-1 ul li:hover{
    background-color: rgba(80, 112, 112, 0.517);
    color: rgb(255, 255, 255);
}
.container-2{
    z-index: 2;
    /* display: none; */
    /* position: absolute; */
    /* top:40px; */
    left: 20px;
    margin: 100px;
    color: white;
    padding: 20px;
    border-radius: 10px;
    font-family: 'Roboto';
    font-size: 32px;
    background-color: rgb(102, 142, 142);
    cursor: pointer;
}

.hide-r{
    display: none;
}
.hide-m{
    display: none;
}
.hide-i{
    display: none;
}
.items-container{
    padding: 20px;
}

.cart_win{
    color: white;
    margin: 100px;
    padding: 20px;
    border-radius: 10px;
    font-family: 'Roboto';
    font-size: 32px;
    background-color: rgb(102, 142, 142);
    overflow: auto;
    /* width: 100%; */
    height: 500px;
}
::-webkit-scrollbar{
    width: 1px;
}
.hide_cart{
    display: none;
}



// Pseudocode for handling the click event and toggling the visibility of order items

// Get references to the order button and order items

//ordering functions
function open_restuarant(){
    var open_items = document.getElementById('order-items-r');
    open_items.classList.toggle('hide-r');

    ////////////replicate this formula
    var restaurants_list = ["R1","R2","R3"];//create list of restaurants
    var restaurants_all = restaurants_list.length;//creates list length
    var restaurants = [];//list where restaurant names are pushed into for loop iteration
    var list_restaurants = '';
    for (var index_r = 0; index_r < restaurants_all; index_r++) {
        restaurants[index_r] = restaurants_list[index_r];//assigns display value from list
        list_restaurants+= '<li>' + restaurants[index_r] + '</li>';//assigns list item contiuously
    }
    open_items.innerHTML = '<div id="restaurant" onclick="open_menu()"><ul>' + list_restaurants + '</ul></div>';//MENU OPENS HERE
    ////////////replic this formula

    var close_menu = document.getElementById("Menus");
    close_menu.classList.add('hide-m');
    var close_order = document.getElementById('cart_grabber');
    close_order.classList.add('hide_cart');  
}

function open_menu(){
    var open_menu = document.getElementById("Menus");
    open_menu.classList.toggle("hide-m");
}

function show_items(){
    var open_items = document.getElementById('M1_items');
    open_items.classList.toggle('hide-i');
    // var items = [];
}

//cart functions
function show_cart(){
    var cart_show =document.getElementById('cart_grabber');
    var close_order_win = document.getElementById('order-items-r');
    var close_menu_win = document.getElementById('Menus');
    cart_show.classList.toggle('hide_cart');
    close_order_win.classList.add('hide-r');
    close_menu_win.classList.add('hide-m');
} 